<?xml version="1.0" encoding="UTF-8"?>

<project xmlns = "http://maven.apache.org/POM/4.0.0" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation = "http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.qiao</groupId>
    <artifactId>swagger2-zuul-core</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>swagger2-zuul-core</name>
    <url>http://www.example.com</url>

    <parent>
        <artifactId>swagger2-zuul-markup</artifactId>
        <groupId>com.qiao</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <version.swagger>2.8.0</version.swagger>
        <snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>
        <asciidoctor.input.directory>${project.basedir}/docs/asciidoc</asciidoctor.input.directory>
        <generated.asciidoc.directory>${project.build.directory}/asciidoc</generated.asciidoc.directory>
        <asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
        <asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${version.swagger}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${version.swagger}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
        </dependency>

        <!--maven命令操作-->
        <dependency>
            <groupId>org.apache.maven.shared</groupId>
            <artifactId>maven-invoker</artifactId>
            <version>3.0.1</version>
        </dependency>

        <!--springfox-staticdocs 生成静态文档-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-staticdocs</artifactId>
            <version>2.6.1</version>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId><!--Maven通过Maven Surefire Plugin插件执行单元测试-->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                        </plugin>
                        <!-- Run the generated asciidoc through Asciidoctor to generate
                             other documentation types, such as PDFs or HTML5 -->
                        <!--通过Asciidoctor使得asciidoc生成其他的文档格式，例如：PDF 或者HTML5-->
                        <plugin>
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctor-maven-plugin</artifactId>
                            <version>1.5.3</version>
                            <!-- Include Asciidoctor PDF for pdf generation -->
                            <!--生成PDF-->
                            <dependencies>
                                <dependency>
                                    <groupId>org.asciidoctor</groupId>
                                    <artifactId>asciidoctorj-pdf</artifactId>
                                    <version>1.5.0-alpha.14</version>
                                </dependency>
                                <!-- Comment this section to use the default jruby artifact provided by the plugin -->
                                <dependency>
                                    <groupId>org.jruby</groupId>
                                    <artifactId>jruby-complete</artifactId>
                                    <version>1.7.21</version>
                                </dependency>
                            </dependencies>

                            <!-- Configure generic document generation settings -->
                            <!--文档生成配置-->
                            <configuration>
                                <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
                                <sourceDocumentName>index.adoc</sourceDocumentName>
                                <attributes>
                                    <doctype>book</doctype>
                                    <toc>left</toc>
                                    <toclevels>3</toclevels>
                                    <numbered></numbered>
                                    <hardbreaks></hardbreaks>
                                    <sectlinks></sectlinks>
                                    <sectanchors></sectanchors>
                                    <generated>${generated.asciidoc.directory}</generated>
                                    <!--pdf文件解決方案??-->
                                    <pdf-fontsdir>fonts</pdf-fontsdir>
                                    <pdf-stylesdir>themes</pdf-stylesdir>
                                    <pdf-style>cn</pdf-style>
                                </attributes>
                            </configuration>
                            <!-- Since each execution can only handle one backend, run
                               separate executions for each desired output type -->
                            <!--因为每次执行只能处理一个后端，所以对于每个想要的输出类型，都是独立分开执行-->
                            <executions>
                                <!--html5-->
                                <execution>
                                    <id>output-html</id>
                                    <phase>test</phase>
                                    <goals>
                                        <goal>process-asciidoc</goal>
                                    </goals>
                                    <configuration>
                                        <backend>html5</backend>
                                        <outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
                                    </configuration>
                                </execution>
                                <!--pdf-->
                                <execution>
                                    <id>output-pdf</id>
                                    <phase>test</phase>
                                    <goals>
                                        <goal>process-asciidoc</goal>
                                    </goals>
                                    <configuration>
                                        <backend>pdf</backend>
                                        <outputDirectory>${asciidoctor.pdf.output.directory}</outputDirectory>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>maven-project-info-reports-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
